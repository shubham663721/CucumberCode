[
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 564793727,
              "status": "passed"
            },
            "match": {
              "location": "ServiceHooks.startTest(Scenario)"
            }
          }
        ],
        "line": 313,
        "name": "\u003cAMASC01\u003e Application submission for Self, Spouse and Child and with all the products and rider(s) (JET)",
        "description": "Physician performing Normal Duties",
        "id": "ama-test;\u003camasc01\u003e-application-submission-for-self,-spouse-and-child-and-with-all-the-products-and-rider(s)-(jet);;2",
        "after": [
          {
            "result": {
              "duration": 601483740,
              "status": "passed"
            },
            "match": {
              "location": "ServiceHooks.endTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4871098577,
              "status": "passed"
            },
            "line": 7,
            "name": "Test set up for \"NYL\" feature and \"NYL_AMA\" scenario",
            "match": {
              "arguments": [
                {
                  "val": "NYL",
                  "offset": 17
                },
                {
                  "val": "NYL_AMA",
                  "offset": 35
                }
              ],
              "location": "CommonPageStepDef.test_set_up_for_feature_and_scenario(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 71790827449,
              "status": "passed"
            },
            "line": 8,
            "name": "Customer navigate to NYL \"ama\"",
            "match": {
              "arguments": [
                {
                  "val": "ama",
                  "offset": 26
                }
              ],
              "location": "NYL_StepDef.customer_navigate_to_NYL(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 116094541,
              "status": "passed"
            },
            "line": 9,
            "name": "Clicks on Start Your Application Button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Start_Your_Application_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1436984053,
              "status": "passed"
            },
            "line": 10,
            "name": "Eligibility page details are displayed to user",
            "match": {
              "location": "NYL_StepDef.eligibility_page_details_are_displayed_to_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 930183555,
              "status": "passed"
            },
            "line": 11,
            "name": "Selects I am as \"Physician\"",
            "match": {
              "arguments": [
                {
                  "val": "Physician",
                  "offset": 17
                }
              ],
              "location": "NYL_StepDef.selects_I_am_as(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 727356553,
              "status": "passed"
            },
            "line": 12,
            "name": "Selects Yes Radio Button for Actively Performing Normal Duties of your occupation Question",
            "match": {
              "location": "NYL_StepDef.selects_Yes_Radio_Button_for_Actively_Performing_Normal_Duties_of_your_occupation_Question()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 736609478,
              "status": "passed"
            },
            "line": 13,
            "name": "Selects Yes Radio Button for Premier Accident or Hospital Income coverages for your spouse Question",
            "match": {
              "location": "NYL_StepDef.selects_Yes_Radio_Button_for_Premier_Accident_or_Hospital_Income_coverages_for_your_spouse_Question()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 736781707,
              "status": "passed"
            },
            "line": 14,
            "name": "Selects Yes Radio Button for Wish to apply for apply for insurance for any children Question",
            "match": {
              "location": "NYL_StepDef.selects_Yes_Radio_Button_for_Wish_to_apply_for_apply_for_insurance_for_any_children_Question()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4468383060,
              "status": "passed"
            },
            "line": 15,
            "name": "Enter details for self as \"Mr.\",\"Jack\",\"Snmmmmtestcasejm\",\"Manitoba\",\"02/06/1977\"",
            "match": {
              "arguments": [
                {
                  "val": "Mr.",
                  "offset": 27
                },
                {
                  "val": "Jack",
                  "offset": 33
                },
                {
                  "val": "Snmmmmtestcasejm",
                  "offset": 40
                },
                {
                  "val": "Manitoba",
                  "offset": 59
                },
                {
                  "val": "02/06/1977",
                  "offset": 70
                }
              ],
              "location": "NYL_StepDef.enter_details_for_self_as(String,String,String,String,String)"
            },
            "matchedColumns": [
              2,
              3,
              4,
              5,
              6
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3044166119,
              "status": "passed"
            },
            "line": 16,
            "name": "Enter details for Spouse as \"Mrs.\",\"Thalia\",\"Snmmmmtestcasegt\",\"05/20/1978\"",
            "match": {
              "arguments": [
                {
                  "val": "Mrs.",
                  "offset": 29
                },
                {
                  "val": "Thalia",
                  "offset": 36
                },
                {
                  "val": "Snmmmmtestcasegt",
                  "offset": 45
                },
                {
                  "val": "05/20/1978",
                  "offset": 64
                }
              ],
              "location": "NYL_StepDef.enter_etails_for_Spouse_as(String,String,String,String)"
            },
            "matchedColumns": [
              7,
              8,
              9,
              10
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1172083877,
              "status": "passed"
            },
            "line": 17,
            "name": "Click on Add Child button",
            "match": {
              "location": "NYL_StepDef.click_on_Add_Child_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7780969315,
              "status": "passed"
            },
            "line": 18,
            "name": "Add Child Screen is displayed and Enters Child details as \"John\",\"Gill\",\"SYSDATE  - 00Y/06M/00D\",\"Male\"",
            "match": {
              "arguments": [
                {
                  "val": "John",
                  "offset": 59
                },
                {
                  "val": "Gill",
                  "offset": 66
                },
                {
                  "val": "SYSDATE  - 00Y/06M/00D",
                  "offset": 73
                },
                {
                  "val": "Male",
                  "offset": 98
                }
              ],
              "location": "NYL_StepDef.add_Child_Screen_is_displayed_and_Enters_Child_details_as(String,String,String,String)"
            },
            "matchedColumns": [
              11,
              12,
              13,
              14
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 153333956,
              "status": "passed"
            },
            "line": 19,
            "name": "Selects Married question as No for Child",
            "match": {
              "location": "NYL_StepDef.selects_Married_question_as_No_for_Child()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91128642,
              "status": "passed"
            },
            "line": 20,
            "name": "Selects No for full time student for Child",
            "match": {
              "location": "NYL_StepDef.selects_No_for_full_time_student()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94031847,
              "status": "passed"
            },
            "line": 21,
            "name": "Honorably Discharged question as No",
            "match": {
              "location": "NYL_StepDef.honorably_Discharged_question_as_No()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1091650462,
              "status": "passed"
            },
            "line": 22,
            "name": "Click on Add Child button on Screen",
            "match": {
              "location": "NYL_StepDef.click_on_Add_Child_button_on_Screen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9630399049,
              "status": "passed"
            },
            "line": 23,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1622897285,
              "status": "passed"
            },
            "line": 24,
            "name": "Verify that error message is displayed for state eligibility at top of the page",
            "match": {
              "location": "NYL_StepDef.verify_the_error_message_is_displayed_for_state_validation_at_top_of_the_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1654986813,
              "status": "passed"
            },
            "line": 25,
            "name": "Enter New State as \"New York\"",
            "match": {
              "arguments": [
                {
                  "val": "New York",
                  "offset": 20
                }
              ],
              "location": "NYL_StepDef.enter_New_State_as(String)"
            },
            "matchedColumns": [
              15
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9640230884,
              "status": "passed"
            },
            "line": 26,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2046938148,
              "status": "passed"
            },
            "line": 27,
            "name": "Product page details are displayed to user",
            "match": {
              "location": "NYL_StepDef.product_page_details_are_displayed_to_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5096001422,
              "status": "passed"
            },
            "line": 28,
            "name": "Clicks on Back or Previous button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Back_or_Previous_Button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8680316415,
              "status": "passed"
            },
            "line": 29,
            "name": "Enters DOB for Spouse as \"SYSDATE - 16Y/11M/30D\"",
            "match": {
              "arguments": [
                {
                  "val": "SYSDATE - 16Y/11M/30D",
                  "offset": 26
                }
              ],
              "location": "NYL_StepDef.enters_DOB_for_Spouse_as(String)"
            },
            "matchedColumns": [
              16
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9608958884,
              "status": "passed"
            },
            "line": 30,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2046861495,
              "status": "passed"
            },
            "line": 31,
            "name": "Product page details are displayed to user",
            "match": {
              "location": "NYL_StepDef.product_page_details_are_displayed_to_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 90775785432,
              "status": "passed"
            },
            "line": 32,
            "name": "Validates that Spouse is not displayed for following products: PAI,HII",
            "match": {
              "location": "NYL_StepDef.validates_that_Spouse_is_not_displayed_for_following_products_PAI_HII()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5095893016,
              "status": "passed"
            },
            "line": 33,
            "name": "Clicks on Back or Previous button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Back_or_Previous_Button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7555338424,
              "status": "passed"
            },
            "line": 34,
            "name": "Enters DOB for Spouse as \"05/20/1978\"",
            "match": {
              "arguments": [
                {
                  "val": "05/20/1978",
                  "offset": 26
                }
              ],
              "location": "NYL_StepDef.enters_DOB_for_Spouse_as(String)"
            },
            "matchedColumns": [
              10
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 691451356,
              "status": "passed"
            },
            "line": 35,
            "name": "Selects No Radio Button for Actively Performing Normal Duties of your occupation Question",
            "match": {
              "location": "NYL_StepDef.selects_No_Radio_Button_for_Actively_Performing_Normal_Duties_of_your_occupation_Question()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9574427673,
              "status": "passed"
            },
            "line": 36,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2054951469,
              "status": "passed"
            },
            "line": 37,
            "name": "Product page details are displayed to user",
            "match": {
              "location": "NYL_StepDef.product_page_details_are_displayed_to_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 90981728279,
              "status": "passed"
            },
            "line": 38,
            "name": "Validates that Self is not displayed for following products: DPOSDI,OOEI",
            "match": {
              "location": "NYL_StepDef.validates_that_Self_is_not_displayed_for_following_products_DPOSDI_OOEI()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5112079381,
              "status": "passed"
            },
            "comments": [
              {
                "line": 39,
                "value": "#The following products will be displayed: TwentyYTL, FifteenYTL, TenYTL, PureTerm, PrefTerm, PAI, HII"
              }
            ],
            "line": 40,
            "name": "Clicks on Back or Previous button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Back_or_Previous_Button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 724567526,
              "status": "passed"
            },
            "line": 41,
            "name": "Selects Yes Radio Button for Actively Performing Normal Duties of your occupation Question",
            "match": {
              "location": "NYL_StepDef.selects_Yes_Radio_Button_for_Actively_Performing_Normal_Duties_of_your_occupation_Question()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9623769979,
              "status": "passed"
            },
            "line": 42,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 47341050304,
              "error_message": "org.openqa.selenium.NoSuchElementException: Timed out after 10 seconds. Unable to locate the element\r\n\tat org.openqa.selenium.support.pagefactory.AjaxElementLocator.findElement(AjaxElementLocator.java:123)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy34.isDisplayed(Unknown Source)\r\n\tat Page.Nyl_ProductPage.product_page_details_are_displayed_to_user(Nyl_ProductPage.java:886)\r\n\tat StepDef.NYL_StepDef.product_page_details_are_displayed_to_user(NYL_StepDef.java:805)\r\n\tat ✽.Then Product page details are displayed to user(src/main/resources/Feature/ama_NYL.feature:44)\r\nCaused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//label[contains(text(),\u0027Select Product(s)\u0027)]\"}\n  (Session info: chrome\u003d71.0.3578.98)\n  (Driver info: chromedriver\u003d2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform\u003dWindows NT 10.0.14393 x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 0 milliseconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.14.0\u0027, revision: \u0027aacccce0\u0027, time: \u00272018-08-02T20:19:58.91Z\u0027\nSystem info: host: \u0027IND-MHP3DW10928\u0027, ip: \u0027172.17.220.235\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_65\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\\Users\\MAYURI~1\\AppData\\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:62756}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}\nSession ID: 3c6bcd33b855dd0c5a83010025fe8c46\n*** Element info: {Using\u003dxpath, value\u003d//label[contains(text(),\u0027Select Product(s)\u0027)]}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat java.lang.reflect.Constructor.newInstance(Unknown Source)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)\r\n\tat org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)\r\n\tat org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)\r\n\tat org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.AjaxElementLocator.access$001(AjaxElementLocator.java:39)\r\n\tat org.openqa.selenium.support.pagefactory.AjaxElementLocator$SlowLoadingElement.isLoaded(AjaxElementLocator.java:194)\r\n\tat org.openqa.selenium.support.ui.SlowLoadableComponent.get(SlowLoadableComponent.java:78)\r\n\tat org.openqa.selenium.support.pagefactory.AjaxElementLocator.findElement(AjaxElementLocator.java:119)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy34.isDisplayed(Unknown Source)\r\n\tat Page.Nyl_ProductPage.product_page_details_are_displayed_to_user(Nyl_ProductPage.java:886)\r\n\tat StepDef.NYL_StepDef.product_page_details_are_displayed_to_user(NYL_StepDef.java:805)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:38)\r\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\r\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:300)\r\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\r\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\r\n\tat com.github.mkolisnyk.cucumber.runner.ExtendedExecutionUnitRunner.run(ExtendedExecutionUnitRunner.java:32)\r\n\tat com.github.mkolisnyk.cucumber.runner.ExtendedExamplesRunner.runChild(ExtendedExamplesRunner.java:102)\r\n\tat com.github.mkolisnyk.cucumber.runner.ExtendedExamplesRunner.runChild(ExtendedExamplesRunner.java:19)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat com.github.mkolisnyk.cucumber.runner.ExtendedExamplesRunner.run(ExtendedExamplesRunner.java:87)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\r\n\tat com.github.mkolisnyk.cucumber.runner.ExtendedScenarioOutlineRunner.runChild(ExtendedScenarioOutlineRunner.java:69)\r\n\tat com.github.mkolisnyk.cucumber.runner.ExtendedScenarioOutlineRunner.runChild(ExtendedScenarioOutlineRunner.java:17)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat com.github.mkolisnyk.cucumber.runner.ExtendedScenarioOutlineRunner.run(ExtendedScenarioOutlineRunner.java:64)\r\n\tat com.github.mkolisnyk.cucumber.runner.ExtendedFeatureRunner.runChild(ExtendedFeatureRunner.java:99)\r\n\tat com.github.mkolisnyk.cucumber.runner.ExtendedFeatureRunner.runChild(ExtendedFeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\r\n\tat com.github.mkolisnyk.cucumber.runner.ExtendedCucumber.runChild(ExtendedCucumber.java:107)\r\n\tat com.github.mkolisnyk.cucumber.runner.ExtendedCucumber.runChild(ExtendedCucumber.java:31)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat com.github.mkolisnyk.cucumber.runner.ExtendedCucumber.run(ExtendedCucumber.java:147)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)\r\n\tat java.util.Iterator.forEachRemaining(Unknown Source)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.copyInto(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.evaluate(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline.forEach(Unknown Source)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:83)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:74)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)\r\n\tat org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:82)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)\r\n",
              "status": "failed"
            },
            "line": 44,
            "name": "Product page details are displayed to user",
            "match": {
              "location": "NYL_StepDef.product_page_details_are_displayed_to_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "Selects product TwentyYTL for Self",
            "match": {
              "location": "NYL_StepDef.selects_product_TwentyYTL_for_Self()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "Selects product TwentyYTL for Child",
            "match": {
              "location": "NYL_StepDef.selects_product_TwentyYTL_for_Child()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "Selects product FifteenYTL for Self",
            "match": {
              "location": "NYL_StepDef.selects_product_FifteenYTL_for_Self()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "Verify Child icon is disabled for FifteenYTL",
            "match": {
              "location": "NYL_StepDef.verify_Child_icon_is_disabled_for_FifteenYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "Selects product TenYTL for Self",
            "match": {
              "location": "NYL_StepDef.selects_product_TenYTL_for_Self()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "Verify Child icon is disabled for TenYTL",
            "match": {
              "location": "NYL_StepDef.verify_Child_icon_is_disabled_for_TenYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "Selects product PureTerm for Self",
            "match": {
              "location": "NYL_StepDef.selects_product_PureTerm_for_Self()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "Selects product PrefTerm for Self",
            "match": {
              "location": "NYL_StepDef.selects_product_PrefTerm_for_Self()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 53,
            "name": "Verify Child icon is disabled for PrefTerm",
            "match": {
              "location": "NYL_StepDef.verify_Child_icon_is_disabled_for_PrefTerm()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "Selects product PAI for Child",
            "match": {
              "location": "NYL_StepDef.selects_product_PAI_for_Child()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "Selects product DPOSDI for Self",
            "match": {
              "location": "NYL_StepDef.selects_product_DPOSDI_for_Self()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 56,
            "name": "Selects product OOEI for Self",
            "match": {
              "location": "NYL_StepDef.selects_product_OOEI_for_Self()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "Selects product HII for Child",
            "match": {
              "location": "NYL_StepDef.selects_product_HII_for_Child()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "Product: Additional Questions page details are displayed to user and selects Answer as No for all for Self",
            "match": {
              "location": "NYL_StepDef.product_Additional_Questions_page_details_are_displayed_to_user_and_selects_Answer_as_No_for_all_for_Self()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "Selects Answer as No for all additional questions of Group Disability Insurance for Self",
            "match": {
              "location": "NYL_StepDef.selects_Answer_as_No_for_all_additional_questions_of_Group_Disability_Insuranse_for_Self()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "Enters Monthly Income for Self as \"10000\"",
            "match": {
              "arguments": [
                {
                  "val": "10000",
                  "offset": 35
                }
              ],
              "location": "NYL_StepDef.enters_Monthly_Income_for_Self_as(String)"
            },
            "matchedColumns": [
              17
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "Enters details for Monthly Expense and Percentage Responsible as \"5000\",\"100\"",
            "match": {
              "arguments": [
                {
                  "val": "5000",
                  "offset": 66
                },
                {
                  "val": "100",
                  "offset": 73
                }
              ],
              "location": "NYL_StepDef.enters_details_for_Monthly_Expense_and_Percentage_Responsible_as(String,String)"
            },
            "matchedColumns": [
              18,
              19
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 64,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 65,
            "name": "Validate error message for required question",
            "match": {
              "location": "NYL_StepDef.validate_error_message()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "Confirms Imp Replacement Info for NewYork state",
            "match": {
              "location": "NYL_StepDef.confirms_Imp_Replacement_Info_for_NewYork_state()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 68,
            "name": "Clicks on Back or Previous button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Back_or_Previous_Button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 69,
            "name": "Product: Additional Questions page details are displayed to user and selects Answer as Yes for all questions for Self",
            "match": {
              "location": "NYL_StepDef.product_Additional_Questions_page_details_are_displayed_to_user_and_selects_Answer_as_Yes_for_all_questions_for_Self()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 70,
            "name": "Enter additional details as \"125000\",\"65000\",\"ace\"",
            "match": {
              "arguments": [
                {
                  "val": "125000",
                  "offset": 29
                },
                {
                  "val": "65000",
                  "offset": 38
                },
                {
                  "val": "ace",
                  "offset": 46
                }
              ],
              "location": "NYL_StepDef.enter_additional_details_as(String,String,String)"
            },
            "matchedColumns": [
              96,
              94,
              95
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "Verify New York State paragraph is displayed for Self",
            "match": {
              "location": "NYL_StepDef.verify_New_York_State_paragraph_is_displayed_for_Self()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "Selects Yes for unable to work because of a disability for Self",
            "match": {
              "location": "NYL_StepDef.selects_Yes_for_unable_to_work_because_of_a_disability_for_Self()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 73,
            "name": "Clicks on Add Company Button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Add_Company_Button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 74,
            "name": "Selects Benefit Option as \"Through Age\"",
            "match": {
              "arguments": [
                {
                  "val": "Through Age",
                  "offset": 27
                }
              ],
              "location": "NYL_StepDef.selects_Benefit_Option_as(String)"
            },
            "matchedColumns": [
              99
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 75,
            "name": "Enters details for Company \"ace\",\"100000\",\"70\" and click on add button",
            "match": {
              "arguments": [
                {
                  "val": "ace",
                  "offset": 28
                },
                {
                  "val": "100000",
                  "offset": 34
                },
                {
                  "val": "70",
                  "offset": 43
                }
              ],
              "location": "NYL_StepDef.enters_details_for_Company_and_click_on_add_button(String,String,String)"
            },
            "matchedColumns": [
              96,
              98,
              100
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 76,
            "name": "Selects Yes for replace any other company\u0027s coverage for Self",
            "match": {
              "location": "NYL_StepDef.selects_Yes_for_replace_any_other_company_s_coverage_for_Self()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "Enters Amount under replace any other company\u0027s coverage as \"95000\"",
            "match": {
              "arguments": [
                {
                  "val": "95000",
                  "offset": 61
                }
              ],
              "location": "NYL_StepDef.enters_Amount_under_replace_any_other_company_s_coverage_as(String)"
            },
            "matchedColumns": [
              101
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 78,
            "name": "Selects Yes for applying for any other business/office overhead insurance",
            "match": {
              "location": "NYL_StepDef.selects_Yes_for_applying_for_any_other_business_office_overhead_insurance()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "Clicks on Add Company Button for Business or Office Overhead",
            "match": {
              "location": "NYL_StepDef.clicks_on_Add_Company_Button_for_Business_or_Office_Overhead()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "Enters details for Company \"wayne enterprise\",\"94000\",\"24\" and click on add button",
            "match": {
              "arguments": [
                {
                  "val": "wayne enterprise",
                  "offset": 28
                },
                {
                  "val": "94000",
                  "offset": 47
                },
                {
                  "val": "24",
                  "offset": 55
                }
              ],
              "location": "NYL_StepDef.enters_details_for_Company_and_click_on_add_button(String,String,String)"
            },
            "matchedColumns": [
              102,
              103,
              104
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "Selects Yes for replace any other company\u0027s coverage for Self for overhead disability",
            "match": {
              "location": "NYL_StepDef.selects_Yes_for_replace_any_other_company_s_coverage_for_Self_overhead_disability()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 82,
            "name": "Enters Amount under replace any other company\u0027s coverage of overhead product as \"68000\"",
            "match": {
              "arguments": [
                {
                  "val": "68000",
                  "offset": 81
                }
              ],
              "location": "NYL_StepDef.enters_Amount_under_replace_any_other_company_s_coverage_of_overhead_product_as(String)"
            },
            "matchedColumns": [
              105
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 83,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 85,
            "name": "Request Coverage page is displayed to user",
            "match": {
              "location": "NYL_StepDef.request_Coverage_page_is_displayed_to_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 86,
                "value": "#And Validates Quick Decision is not displayed for PureTerm"
              }
            ],
            "line": 87,
            "name": "Clicks on Back or Previous button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Back_or_Previous_Button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 88,
            "name": "Selects No for replace any other company\u0027s coverage for Self for overhead disability",
            "match": {
              "location": "NYL_StepDef.selects_No_for_replace_any_other_company_s_coverage_for_Self_overhead_disability()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 89,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 91,
            "name": "Request Coverage page is displayed to user",
            "match": {
              "location": "NYL_StepDef.request_Coverage_page_is_displayed_to_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 92,
            "name": "Selects Benefit Amount for Self as \"$1,775,000\" under TwentyYTL",
            "match": {
              "arguments": [
                {
                  "val": "$1,775,000",
                  "offset": 36
                }
              ],
              "location": "NYL_StepDef.selects_Benefit_Amount_for_Self_as_under_TwentyYTL(String)"
            },
            "matchedColumns": [
              42
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 93,
            "name": "Validates under TwentyYTL the Benefit Slider Range as \"100000\" to \"4000000\"",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 55
                },
                {
                  "val": "4000000",
                  "offset": 67
                }
              ],
              "location": "NYL_StepDef.validates_under_TwentyYTL_the_Benefit_Slider_Range_as_to(String,String)"
            },
            "matchedColumns": [
              106,
              107
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 94,
            "name": "Selects Waiver Rider for Twenty Year Product",
            "match": {
              "location": "NYL_StepDef.selects_Waiver_Rider_for_Twenty_Year_Product()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 95,
            "name": "Selects AD\u0026D Rider for Self under TwentyYTL",
            "match": {
              "location": "NYL_StepDef.selects_AD_D_Rider_for_Self_under_TwentyYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 96,
            "name": "Selects Rider Benefit Amount for Self as \"$250,000\" for ADnD Rider under TwentyYTL",
            "match": {
              "arguments": [
                {
                  "val": "$250,000",
                  "offset": 42
                }
              ],
              "location": "NYL_StepDef.selects_Rider_Benefit_Amount_for_Self_as_under_ADnD_Rider(String)"
            },
            "matchedColumns": [
              21
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 97,
            "name": "Validates under ADnD Rider TwentyYTL Benefit Slider Range as \"25000\" to \"1000000\" for Self",
            "match": {
              "arguments": [
                {
                  "val": "25000",
                  "offset": 62
                },
                {
                  "val": "1000000",
                  "offset": 73
                }
              ],
              "location": "NYL_StepDef.validates_under_ADnD_Rider_the_Benefit_Slider_Range_as_to(String,String)"
            },
            "matchedColumns": [
              112,
              113
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "Validates Benefit Amount for Child as \"$25,000\" under TwentyYTL",
            "match": {
              "arguments": [
                {
                  "val": "$25,000",
                  "offset": 39
                }
              ],
              "location": "NYL_StepDef.validates_Benefit_Amount_for_Child_as_under_TwentyYTL(String)"
            },
            "matchedColumns": [
              22
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 99,
            "name": "Selects Benefit Amount for Self as \"$500,000\" under FifteenYTL",
            "match": {
              "arguments": [
                {
                  "val": "$500,000",
                  "offset": 36
                }
              ],
              "location": "NYL_StepDef.selects_Benefit_Amount_for_Self_as_under_FifteenYTL(String)"
            },
            "matchedColumns": [
              23
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 100,
            "name": "Validates under FifteenYTL the Benefit Slider Range as \"100000\" to \"4000000\" for self",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 56
                },
                {
                  "val": "4000000",
                  "offset": 68
                }
              ],
              "location": "NYL_StepDef.validates_under_FifteenYTL_the_Benefit_Slider_Range_as_to_for_self(String,String)"
            },
            "matchedColumns": [
              108,
              109
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 101,
            "name": "Selects Waiver of Premium Rider for Self under FifteenYTL",
            "match": {
              "location": "NYL_StepDef.selects_Waiver_of_Premium_Rider_for_Self_under_FifteenYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 102,
            "name": "Selects AD\u0026D Rider for Self under FifteenYTL",
            "match": {
              "location": "NYL_StepDef.selects_AD_D_Rider_for_Self_under_FifteenYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 103,
            "name": "Selects Rider Benefit Amount for Self as \"$150,000\" for ADnD Rider under FifteenYTL",
            "match": {
              "arguments": [
                {
                  "val": "$150,000",
                  "offset": 42
                }
              ],
              "location": "NYL_StepDef.selects_Rider_Benefit_Amount_for_Self_as_for_ADnD_Rider_under_FifteenYTL(String)"
            },
            "matchedColumns": [
              24
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 104,
            "name": "Validates under ADnD Rider FifteenYTL Benefit Slider Range as \"25000\" to \"1000000\" for Self",
            "match": {
              "arguments": [
                {
                  "val": "25000",
                  "offset": 63
                },
                {
                  "val": "1000000",
                  "offset": 74
                }
              ],
              "location": "NYL_StepDef.validates_under_ADnD_Rider_FifteenYTL_Benefit_Slider_Range_as_to_for_Self(String,String)"
            },
            "matchedColumns": [
              114,
              115
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 105,
            "name": "Selects Benefit Amount for Self as \"$500,000\" under TenYTL",
            "match": {
              "arguments": [
                {
                  "val": "$500,000",
                  "offset": 36
                }
              ],
              "location": "NYL_StepDef.selects_Benefit_Amount_for_Self_as_under_TenYTL(String)"
            },
            "matchedColumns": [
              25
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 106,
            "name": "Validates under TenYTL the Benefit Slider Range as \"100000\" to \"4000000\" for self",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 52
                },
                {
                  "val": "4000000",
                  "offset": 64
                }
              ],
              "location": "NYL_StepDef.validates_under_TenYTL_the_Benefit_Slider_Range_as_to(String,String)"
            },
            "matchedColumns": [
              110,
              111
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 107,
            "name": "Selects Waiver of Premium Rider for TenYear for Self",
            "match": {
              "location": "NYL_StepDef.selects_Waiver_of_Premium_Rider_for_TenYear_for_Self()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 108,
            "name": "Selects AD\u0026D Rider for Self under TenYTL",
            "match": {
              "location": "NYL_StepDef.selects_AD_D_Rider_for_Self_under_TenYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "Selects Rider Benefit Amount for Self as \"$150,000\" for ADnD Rider under TenYTL",
            "match": {
              "arguments": [
                {
                  "val": "$150,000",
                  "offset": 42
                }
              ],
              "location": "NYL_StepDef.selects_Rider_Benefit_Amount_for_Self_as_for_ADnD_Rider_under_TenYTL(String)"
            },
            "matchedColumns": [
              26
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "Validates under ADnD Rider the Benefit Slider Range as \"25000\" to \"1000000\" for Self",
            "match": {
              "arguments": [
                {
                  "val": "25000",
                  "offset": 56
                },
                {
                  "val": "1000000",
                  "offset": 67
                }
              ],
              "location": "NYL_StepDef.validates_under_ADnD_Rider_the_Benefit_Slider_Range_as_to_for_Self(String,String)"
            },
            "matchedColumns": [
              116,
              117
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 111,
                "value": "#And Validates Quick Decision is available for Self under PureTerm"
              }
            ],
            "line": 112,
            "name": "Selects Benefit Amount for Self as \"$500,000\" under PureTerm",
            "match": {
              "arguments": [
                {
                  "val": "$500,000",
                  "offset": 36
                }
              ],
              "location": "NYL_StepDef.selects_Benefit_Amount_for_Self_as_under_PureTerm(String)"
            },
            "matchedColumns": [
              27
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 113,
            "name": "Validates under PureTerm the Benefit Slider Range as \"100000\" to \"1000000\" for Self",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 54
                },
                {
                  "val": "1000000",
                  "offset": 66
                }
              ],
              "location": "NYL_StepDef.validates_under_PureTerm_the_Benefit_Slider_Range_as_to_for_Self(String,String)"
            },
            "matchedColumns": [
              118,
              119
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 114,
            "name": "Selects Waiver of Premium Rider for Self under PureTerm",
            "match": {
              "location": "NYL_StepDef.selects_Waiver_of_Premium_Rider_for_Self_under_PureTerm()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 115,
            "name": "Selects Benefit Amount for Self as \"$750,000\" under PrefTerm",
            "match": {
              "arguments": [
                {
                  "val": "$750,000",
                  "offset": 36
                }
              ],
              "location": "NYL_StepDef.selects_Benefit_Amount_for_Self_as_under_PrefTerm(String)"
            },
            "matchedColumns": [
              28
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 116,
            "name": "Validates under PrefTerm the Benefit Slider Range as \"25000\" to \"3000000\" for Self",
            "match": {
              "arguments": [
                {
                  "val": "25000",
                  "offset": 54
                },
                {
                  "val": "3000000",
                  "offset": 65
                }
              ],
              "location": "NYL_StepDef.validates_under_PrefTerm_the_Benefit_Slider_Range_as_to_for_Self(String,String)"
            },
            "matchedColumns": [
              120,
              121
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 117,
            "name": "Selects Waiver of Premium Rider for Self under PrefTerm",
            "match": {
              "location": "NYL_StepDef.selects_Waiver_of_Premium_Rider_for_Self_under_PrefTerm()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 118,
            "name": "Selects AD\u0026D Rider for Self under PrefTerm",
            "match": {
              "location": "NYL_StepDef.selects_AD_D_Rider_for_Self_under_PrefTerm()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 119,
            "name": "Selects Rider Benefit Amount for Self as \"$200,000\" for ADnD Rider under PrefTerm",
            "match": {
              "arguments": [
                {
                  "val": "$200,000",
                  "offset": 42
                }
              ],
              "location": "NYL_StepDef.selects_Rider_Benefit_Amount_for_Self_as_for_ADnD_Rider_under_PrefTerm(String)"
            },
            "matchedColumns": [
              29
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 120,
            "name": "Validates under ADnD Rider PrefTerm Benefit Slider Range as \"25000\" to \"1000000\" for Self",
            "match": {
              "arguments": [
                {
                  "val": "25000",
                  "offset": 61
                },
                {
                  "val": "1000000",
                  "offset": 72
                }
              ],
              "location": "NYL_StepDef.validates_under_ADnD_Rider_PrefTerm_Benefit_Slider_Range_as_to_for_Self(String,String)"
            },
            "matchedColumns": [
              122,
              123
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 121,
            "name": "Selects Benefit Amount for Self as \"$750,000\" under PAI",
            "match": {
              "arguments": [
                {
                  "val": "$750,000",
                  "offset": 36
                }
              ],
              "location": "NYL_StepDef.selects_Benefit_Amount_for_Self_as_under_PAI(String)"
            },
            "matchedColumns": [
              30
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 122,
            "name": "Validates under PAI the Benefit Amount listed for Self are: \"500000\",\"750000\",\"1000000\"",
            "match": {
              "arguments": [
                {
                  "val": "500000",
                  "offset": 61
                },
                {
                  "val": "750000",
                  "offset": 70
                },
                {
                  "val": "1000000",
                  "offset": 79
                }
              ],
              "location": "NYL_StepDef.validates_under_PAI_the_Benefit_Amount_listed_for_Self_are(String,String,String)"
            },
            "matchedColumns": [
              124,
              125,
              126
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 123,
            "name": "Validates Benefit Amount for Spouse as \"$300,000\" under PAI",
            "match": {
              "arguments": [
                {
                  "val": "$300,000",
                  "offset": 40
                }
              ],
              "location": "NYL_StepDef.validates_Benefit_Amount_for_Spouse_as_under_PAI(String)"
            },
            "matchedColumns": [
              31
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 124,
            "name": "Validates Benefit Amount for Child as \"$75,000\" under PAI",
            "match": {
              "arguments": [
                {
                  "val": "$75,000",
                  "offset": 39
                }
              ],
              "location": "NYL_StepDef.validates_Benefit_Amount_for_Child_as_under_PAI(String)"
            },
            "matchedColumns": [
              32
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 125,
            "name": "Selects Benefit Amount for Self as \"$1,500\" under DPOSDI",
            "match": {
              "arguments": [
                {
                  "val": "$1,500",
                  "offset": 36
                }
              ],
              "location": "NYL_StepDef.selects_Benefit_Amount_for_Self_as_under_DPOSDI(String)"
            },
            "matchedColumns": [
              33
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 126,
            "name": "Validates under DPOSDI the Benefit Slider Range as \"100\" to \"6600\" for Self",
            "match": {
              "arguments": [
                {
                  "val": "100",
                  "offset": 52
                },
                {
                  "val": "6600",
                  "offset": 61
                }
              ],
              "location": "NYL_StepDef.validates_under_DPOSDI_the_Benefit_Slider_Range_as_to_for_Self(String,String)"
            },
            "matchedColumns": [
              128,
              127
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 127,
            "name": "Selects Wait Period for Self as \"60 days\" under DPOSDI",
            "match": {
              "arguments": [
                {
                  "val": "60 days",
                  "offset": 33
                }
              ],
              "location": "NYL_StepDef.selects_Wait_Period_for_Self_as_under_DPOSDI(String)"
            },
            "matchedColumns": [
              34
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 128,
            "name": "Validates Benefit Period for Self as \"To age 67 plan\" under DPOSDI",
            "match": {
              "arguments": [
                {
                  "val": "To age 67 plan",
                  "offset": 38
                }
              ],
              "location": "NYL_StepDef.validates_Benefit_Period_for_Self_as_under_DPOSDI(String)"
            },
            "matchedColumns": [
              35
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 129,
            "name": "Selects Cost of Living Adjustment Rider under DPOSDI",
            "match": {
              "location": "NYL_StepDef.selects_Cost_of_Living_Adjustment_Rider_under_DPOSDI()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 130,
            "name": "Selects Benefit Amount for Self as \"$5,000\" under OOEI",
            "match": {
              "arguments": [
                {
                  "val": "$5,000",
                  "offset": 36
                }
              ],
              "location": "NYL_StepDef.selects_Benefit_Amount_for_Self_as_under_OOEI(String)"
            },
            "matchedColumns": [
              36
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 131,
            "name": "Validates under OOEI the Benefit Slider Range as \"1000\" to \"20000\" for Self",
            "match": {
              "arguments": [
                {
                  "val": "1000",
                  "offset": 50
                },
                {
                  "val": "20000",
                  "offset": 60
                }
              ],
              "location": "NYL_StepDef.validates_under_OOEI_the_Benefit_Slider_Range_as_to_for_Self(String,String)"
            },
            "matchedColumns": [
              129,
              130
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 132,
            "name": "Selects Wait Period for Self as \"60 days\" under OOEI",
            "match": {
              "arguments": [
                {
                  "val": "60 days",
                  "offset": 33
                }
              ],
              "location": "NYL_StepDef.selects_Wait_Period_for_Self_as_under_OOEI(String)"
            },
            "matchedColumns": [
              37
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 133,
            "name": "Validates Benefit Duration for Self as \"12 months\" under OOEI",
            "match": {
              "arguments": [
                {
                  "val": "12 months",
                  "offset": 40
                }
              ],
              "location": "NYL_StepDef.validates_Benefit_Duration_for_Self_as_under_OOEI(String)"
            },
            "matchedColumns": [
              38
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 134,
            "name": "Selects Benefit Amount for Self as \"$500\" under HII",
            "match": {
              "arguments": [
                {
                  "val": "$500",
                  "offset": 36
                }
              ],
              "location": "NYL_StepDef.selects_Benefit_Amount_for_Self_as_under_HII(String)"
            },
            "matchedColumns": [
              39
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 135,
            "name": "Validates under HII the Benefit Amount listed for Self are: \"100\",\"200\",\"300\",\"400\",\"500\",\"600\"",
            "match": {
              "arguments": [
                {
                  "val": "100",
                  "offset": 61
                },
                {
                  "val": "200",
                  "offset": 67
                },
                {
                  "val": "300",
                  "offset": 73
                },
                {
                  "val": "400",
                  "offset": 79
                },
                {
                  "val": "500",
                  "offset": 85
                },
                {
                  "val": "600",
                  "offset": 91
                }
              ],
              "location": "NYL_StepDef.validates_under_HII_the_Benefit_Amount_listed_for_Self_are(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              131,
              132,
              133,
              134,
              135,
              136
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 136,
            "name": "Validates Benefit Amount for Spouse as \"$500\" under HII",
            "match": {
              "arguments": [
                {
                  "val": "$500",
                  "offset": 40
                }
              ],
              "location": "NYL_StepDef.validates_Benefit_Amount_for_Spouse_as_under_HII(String)"
            },
            "matchedColumns": [
              40
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 137,
            "name": "Validates Benefit Amount for Child as \"$500\" under HII",
            "match": {
              "arguments": [
                {
                  "val": "$500",
                  "offset": 39
                }
              ],
              "location": "NYL_StepDef.validates_Benefit_Amount_for_Child_as_under_HII(String)"
            },
            "matchedColumns": [
              41
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 139,
            "name": "Validate Max Aggregate error message",
            "match": {
              "location": "NYL_StepDef.validate_Max_Aggregate_error_message()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 140,
            "name": "Selects Benefit Amount for Self as \"$150,000\" under TwentyYTL",
            "match": {
              "arguments": [
                {
                  "val": "$150,000",
                  "offset": 36
                }
              ],
              "location": "NYL_StepDef.selects_Benefit_Amount_for_Self_as_under_TwentyYTL(String)"
            },
            "matchedColumns": [
              43
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 141,
            "name": "Validate Max Aggregate error message",
            "match": {
              "location": "NYL_StepDef.validate_Max_Aggregate_error_message()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 142,
            "name": "Selects Benefit Amount for Self as \"$1,750,000\" under TwentyYTL",
            "match": {
              "arguments": [
                {
                  "val": "$1,750,000",
                  "offset": 36
                }
              ],
              "location": "NYL_StepDef.selects_Benefit_Amount_for_Self_as_under_TwentyYTL(String)"
            },
            "matchedColumns": [
              20
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 143,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 145,
            "name": "Beneficiary Page is displayed to user",
            "match": {
              "location": "NYL_StepDef.beneficiary_Page_is_displayed_to_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 146,
            "name": "Clicks on Add Beneficiary Button for Self under TwentyYTL",
            "match": {
              "location": "NYL_StepDef.clicks_on_Add_Beneficiary_Button_for_Self_under_TwentyYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 147,
            "name": "Add Beneficiary page will be displayed to user and user will select Trust and Primary Radio Buttons",
            "match": {
              "location": "NYL_StepDef.add_Beneficiary_page_will_be_displayed_to_user_and_user_will_select_Trust_and_Primary_Radio_Buttons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 148,
            "name": "User Enters Beneficiary details as \"kennedy\",\"\u003cDateTrust\u003e\"",
            "match": {
              "arguments": [
                {
                  "val": "kennedy",
                  "offset": 36
                },
                {
                  "val": "\u003cDateTrust\u003e",
                  "offset": 46
                }
              ],
              "location": "NYL_StepDef.user_Enters_Beneficiary_details_as(String,String)"
            },
            "matchedColumns": [
              44
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 149,
            "name": "Clicks on OK button",
            "match": {
              "location": "NYL_StepDef.clicks_on_OK_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 150,
            "name": "Verify that the Percent Displayed for Trust is \"100\"",
            "match": {
              "arguments": [
                {
                  "val": "100",
                  "offset": 48
                }
              ],
              "location": "NYL_StepDef.verify_that_the_Percent_Displayed_is_for_Trust(String)"
            },
            "matchedColumns": [
              46
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 151,
            "name": "Clicks on Add Beneficiary Button for Self under TwentyYTL",
            "match": {
              "location": "NYL_StepDef.clicks_on_Add_Beneficiary_Button_for_Self_under_TwentyYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 152,
            "name": "Add Beneficiary page will be displayed to user and user will select Trust and Primary Radio Buttons",
            "match": {
              "location": "NYL_StepDef.add_Beneficiary_page_will_be_displayed_to_user_and_user_will_select_Trust_and_Primary_Radio_Buttons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 153,
            "name": "User Enters Beneficiary details as \"arthur\",\"SYSDATE - 50Y/02M/04D\"",
            "match": {
              "arguments": [
                {
                  "val": "arthur",
                  "offset": 36
                },
                {
                  "val": "SYSDATE - 50Y/02M/04D",
                  "offset": 45
                }
              ],
              "location": "NYL_StepDef.user_Enters_Beneficiary_details_as(String,String)"
            },
            "matchedColumns": [
              45,
              47
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 154,
            "name": "Clicks on OK button",
            "match": {
              "location": "NYL_StepDef.clicks_on_OK_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 155,
            "name": "Validates error message on Add Beneficiary page-Only one Trust is allowed as Primary",
            "match": {
              "location": "NYL_StepDef.validates_error_message_on_Add_Beneficiary_page_Only_one_Trust_is_allowed_as_Primary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 156,
            "name": "Add Beneficiary page will be displayed to user, and user will select Contingent and Trust Radio buttons",
            "match": {
              "location": "NYL_StepDef.add_Beneficiary_page_will_be_displayed_to_user_and_user_will_select_Contingent_and_Trust_Radio_Buttons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 157,
            "name": "User Enters Beneficiary details as \"arthur\",\"SYSDATE - 50Y/02M/04D\"",
            "match": {
              "arguments": [
                {
                  "val": "arthur",
                  "offset": 36
                },
                {
                  "val": "SYSDATE - 50Y/02M/04D",
                  "offset": 45
                }
              ],
              "location": "NYL_StepDef.user_Enters_Beneficiary_details_as(String,String)"
            },
            "matchedColumns": [
              45,
              47
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 158,
            "name": "Clicks on OK button",
            "match": {
              "location": "NYL_StepDef.clicks_on_OK_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 159,
            "name": "Delete Contingent Beneficiary",
            "match": {
              "location": "NYL_StepDef.delete_Contigent_Beneficiary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 160,
            "name": "Delete box is displayed and clicks on Yes",
            "match": {
              "location": "NYL_StepDef.delete_box_is_displayed_and_clicks_on_Yes()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 161,
            "name": "Clicks on Add Beneficiary Button for Self under TwentyYTL",
            "match": {
              "location": "NYL_StepDef.clicks_on_Add_Beneficiary_Button_for_Self_under_TwentyYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 162,
            "name": "Add Beneficiary page will be displayed to user, and user will select Individual and Contingent Radio Buttons",
            "match": {
              "location": "NYL_StepDef.add_Beneficiary_page_will_be_displayed_to_user_and_user_will_select_Individual_and_Contingent_Radio_Buttons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 163,
            "name": "User Enters Beneficiary details as name and relationship\"John\",\"Adams\",\"Son\",\"25\"",
            "match": {
              "arguments": [
                {
                  "val": "John",
                  "offset": 57
                },
                {
                  "val": "Adams",
                  "offset": 64
                },
                {
                  "val": "Son",
                  "offset": 72
                },
                {
                  "val": "25",
                  "offset": 78
                }
              ],
              "location": "NYL_StepDef.user_Enters_Beneficiary_details_as_name_and_relationship(String,String,String,String)"
            },
            "matchedColumns": [
              48,
              49,
              50,
              51
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 164,
            "name": "Clicks on OK button",
            "match": {
              "location": "NYL_StepDef.clicks_on_OK_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 165,
            "name": "Clicks on Add Beneficiary Button for Self under TwentyYTL",
            "match": {
              "location": "NYL_StepDef.clicks_on_Add_Beneficiary_Button_for_Self_under_TwentyYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 166,
            "name": "Add Beneficiary page will be displayed to user, and user will select Individual and Contingent Radio Buttons",
            "match": {
              "location": "NYL_StepDef.add_Beneficiary_page_will_be_displayed_to_user_and_user_will_select_Individual_and_Contingent_Radio_Buttons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 167,
            "name": "User Enters Beneficiary details as name and relationship\"Samantha\",\"Jonas\",\"Other\",\"25\"",
            "match": {
              "arguments": [
                {
                  "val": "Samantha",
                  "offset": 57
                },
                {
                  "val": "Jonas",
                  "offset": 68
                },
                {
                  "val": "Other",
                  "offset": 76
                },
                {
                  "val": "25",
                  "offset": 84
                }
              ],
              "location": "NYL_StepDef.user_Enters_Beneficiary_details_as_name_and_relationship(String,String,String,String)"
            },
            "matchedColumns": [
              52,
              53,
              54,
              55
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 168,
            "name": "Clicks on OK button",
            "match": {
              "location": "NYL_StepDef.clicks_on_OK_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 169,
            "name": "Clicks on Add Beneficiary Button for Self under TwentyYTL",
            "match": {
              "location": "NYL_StepDef.clicks_on_Add_Beneficiary_Button_for_Self_under_TwentyYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 170,
            "name": "Add Beneficiary page will be displayed to user, and user will select Individual and Contingent Radio Buttons",
            "match": {
              "location": "NYL_StepDef.add_Beneficiary_page_will_be_displayed_to_user_and_user_will_select_Individual_and_Contingent_Radio_Buttons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 171,
            "name": "User Enters Beneficiary details as name and relationship\"Rihanna\",\"Jones\",\"Daughter\",\"35\"",
            "match": {
              "arguments": [
                {
                  "val": "Rihanna",
                  "offset": 57
                },
                {
                  "val": "Jones",
                  "offset": 67
                },
                {
                  "val": "Daughter",
                  "offset": 75
                },
                {
                  "val": "35",
                  "offset": 86
                }
              ],
              "location": "NYL_StepDef.user_Enters_Beneficiary_details_as_name_and_relationship(String,String,String,String)"
            },
            "matchedColumns": [
              56,
              57,
              58,
              59
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 172,
            "name": "Clicks on OK button",
            "match": {
              "location": "NYL_StepDef.clicks_on_OK_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 173,
            "name": "Clicks on Add Beneficiary Button for Self under TwentyYTL",
            "match": {
              "location": "NYL_StepDef.clicks_on_Add_Beneficiary_Button_for_Self_under_TwentyYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 174,
            "name": "Add Beneficiary page will be displayed to user, and user will select Individual and Contingent Radio Buttons",
            "match": {
              "location": "NYL_StepDef.add_Beneficiary_page_will_be_displayed_to_user_and_user_will_select_Individual_and_Contingent_Radio_Buttons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "User Enters Beneficiary details as name and relationship\"Jake\",\"Charles\",\"Father\",\"15\"",
            "match": {
              "arguments": [
                {
                  "val": "Jake",
                  "offset": 57
                },
                {
                  "val": "Charles",
                  "offset": 64
                },
                {
                  "val": "Father",
                  "offset": 74
                },
                {
                  "val": "15",
                  "offset": 83
                }
              ],
              "location": "NYL_StepDef.user_Enters_Beneficiary_details_as_name_and_relationship(String,String,String,String)"
            },
            "matchedColumns": [
              60,
              61,
              62,
              63
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "Clicks on OK button",
            "match": {
              "location": "NYL_StepDef.clicks_on_OK_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 177,
            "name": "Clicks on Add Beneficiary Button for Self under FifteenYTL",
            "match": {
              "location": "NYL_StepDef.clicks_on_Add_Beneficiary_Button_for_Self_under_FifteenYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 178,
            "name": "Add Beneficiary page will be displayed to user and user will select Individual and Primary Radio buttons",
            "match": {
              "location": "NYL_StepDef.add_Beneficiary_page_will_be_displayed_to_user_and_user_will_select_Individual_and_Primary_Radio_Buttons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 179,
            "name": "User Enters Beneficiary details as name and relationship\"Carter\",\"Jonas\",\"Father\",\"50\"",
            "match": {
              "arguments": [
                {
                  "val": "Carter",
                  "offset": 57
                },
                {
                  "val": "Jonas",
                  "offset": 66
                },
                {
                  "val": "Father",
                  "offset": 74
                },
                {
                  "val": "50",
                  "offset": 83
                }
              ],
              "location": "NYL_StepDef.user_Enters_Beneficiary_details_as_name_and_relationship(String,String,String,String)"
            },
            "matchedColumns": [
              64,
              65,
              66,
              67
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 180,
            "name": "Clicks on OK button",
            "match": {
              "location": "NYL_StepDef.clicks_on_OK_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 181,
            "name": "Clicks on Add Beneficiary Button for Self under FifteenYTL",
            "match": {
              "location": "NYL_StepDef.clicks_on_Add_Beneficiary_Button_for_Self_under_FifteenYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 182,
            "name": "Add Beneficiary page will be displayed to user and user will select Individual and Primary Radio buttons",
            "match": {
              "location": "NYL_StepDef.add_Beneficiary_page_will_be_displayed_to_user_and_user_will_select_Individual_and_Primary_Radio_Buttons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 183,
            "name": "Selects the First Option from Existing Beneficiaries List and select Type as \"Primary\"",
            "match": {
              "arguments": [
                {
                  "val": "Primary",
                  "offset": 78
                }
              ],
              "location": "NYL_StepDef.selects_the_First_Option_from_Existing_Beneficiaries_List_and_select_Type_as(String)"
            },
            "matchedColumns": [
              145
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 184,
            "name": "Enters Percentage for First Option as \"15\"",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 39
                }
              ],
              "location": "NYL_StepDef.enters_Percentage_for_First_Option_as(String)"
            },
            "matchedColumns": [
              68
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 185,
            "name": "Selects the Second Option from Existing Beneficiaries List and select Type as \"Primary\"",
            "match": {
              "arguments": [
                {
                  "val": "Primary",
                  "offset": 79
                }
              ],
              "location": "NYL_StepDef.selects_the_Second_Option_from_Existing_Beneficiaries_List_and_select_Type_as(String)"
            },
            "matchedColumns": [
              145
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 186,
            "name": "Enters Percentage Second Option as \"15\"",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 36
                }
              ],
              "location": "NYL_StepDef.enters_Percentage_Second_Option_as(String)"
            },
            "matchedColumns": [
              69
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 187,
            "name": "Selects the Third Option from Existing Beneficiaries List and select Type as \"Primary\"",
            "match": {
              "arguments": [
                {
                  "val": "Primary",
                  "offset": 78
                }
              ],
              "location": "NYL_StepDef.selects_the_Third_Option_from_Existing_Beneficiaries_List_and_select_Type_as(String)"
            },
            "matchedColumns": [
              145
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 188,
            "name": "Enters Percentage Third Option as \"20\"",
            "match": {
              "arguments": [
                {
                  "val": "20",
                  "offset": 35
                }
              ],
              "location": "NYL_StepDef.enters_Percentage_Third_Option_as(String)"
            },
            "matchedColumns": [
              70
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 189,
            "name": "Clicks on OK button",
            "match": {
              "location": "NYL_StepDef.clicks_on_OK_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 190,
            "name": "Clicks on Add Beneficiary Button for Self under FifteenYTL",
            "match": {
              "location": "NYL_StepDef.clicks_on_Add_Beneficiary_Button_for_Self_under_FifteenYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 191,
            "name": "Add Beneficiary page will be displayed to user, and user will select Contingent and Trust Radio buttons",
            "match": {
              "location": "NYL_StepDef.add_Beneficiary_page_will_be_displayed_to_user_and_user_will_select_Contingent_and_Trust_Radio_Buttons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 192,
            "name": "Selects the First Option from Existing Beneficiaries List and select Type as \"Contingent\" for Trust",
            "match": {
              "arguments": [
                {
                  "val": "Contingent",
                  "offset": 78
                }
              ],
              "location": "NYL_StepDef.selects_the_First_Option_from_Existing_Beneficiaries_List_and_select_Type_as_for_Trust(String)"
            },
            "matchedColumns": [
              146
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 193,
            "name": "Clicks on OK button",
            "match": {
              "location": "NYL_StepDef.clicks_on_OK_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 194,
            "name": "Verify that the Percent Displayed for Trust is \"100\"",
            "match": {
              "arguments": [
                {
                  "val": "100",
                  "offset": 48
                }
              ],
              "location": "NYL_StepDef.verify_that_the_Percent_Displayed_is_for_Trust(String)"
            },
            "matchedColumns": [
              46
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 195,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 197,
            "name": "Contact Details page is displayed to user and validate details",
            "match": {},
            "keyword": "Then "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 198,
            "name": "Validate the Travel Question for Non QD application",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 199,
            "name": "Selects Yes for Travel Question Non QD for Self",
            "match": {
              "location": "NYL_StepDef.selects_Yes_for_Travel_Question_Non_QD_for_Self()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 200,
            "name": "Enter details for Outside US country and How Long months for Self as \"India\",\"6\"",
            "match": {
              "arguments": [
                {
                  "val": "India",
                  "offset": 70
                },
                {
                  "val": "6",
                  "offset": 78
                }
              ],
              "location": "NYL_StepDef.enter_details_for_Outside_US_country_and_How_Long_months_for_Self_as(String,String)"
            },
            "matchedColumns": [
              71,
              72
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 201,
            "name": "Validate the Travel Question for QD application",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 202,
            "name": "Selects No for Travel Question QD for Self",
            "match": {
              "location": "NYL_StepDef.selects_No_for_Travel_Question_QD_for_Self()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 203,
            "name": "Select DrivingLicense Question as Yes and Enters details for driving info for Self as \"2043310\",\"District of Columbia\"",
            "match": {
              "arguments": [
                {
                  "val": "2043310",
                  "offset": 87
                },
                {
                  "val": "District of Columbia",
                  "offset": 97
                }
              ],
              "location": "NYL_StepDef.select_DrivingLicense_Question_as_Yes_and_Enters_details_for_Self_as(String,String)"
            },
            "matchedColumns": [
              82,
              83
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 204,
            "name": "Enters WeightTwelveMonths ago details for Self as \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                }
              ],
              "location": "NYL_StepDef.enters_WeightTwelveMonths_ago_details_for_Self_as(String)"
            },
            "matchedColumns": [
              78
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 205,
            "name": "Enters contact Details for Self as \"745878574\",\"Married\",\"5.5\",\"220\",\"Male\",\"60 Warren Street #5\",\"Manhattan\",\"10001\"",
            "match": {},
            "matchedColumns": [
              80,
              81,
              73,
              74,
              75,
              76,
              77,
              79
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 206,
            "name": "Selects \"Mobile\" and enter phonenumber \"7480235985\" for Self at contact page",
            "match": {
              "arguments": [
                {
                  "val": "Mobile",
                  "offset": 9
                },
                {
                  "val": "7480235985",
                  "offset": 40
                }
              ],
              "location": "NYL_StepDef.selects_and_enter_phonenumber_for_Self_at_contact_page(String,String)"
            },
            "matchedColumns": [
              84,
              85
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 207,
            "name": "Selects Yes Radio button for Tobacco Question Self",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 208,
            "name": "Enters Last Used Tobacco Date Details for Self as \"SYSDATE - 00Y/06M/00D\"",
            "match": {
              "arguments": [
                {
                  "val": "SYSDATE - 00Y/06M/00D",
                  "offset": 51
                }
              ],
              "location": "NYL_StepDef.enters_Last_Used_Tobacco_Date_Details_for_Self_as(String)"
            },
            "matchedColumns": [
              138
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 209,
            "name": "Clicks on Products used textbox and Selects Product as \"Cigar\"",
            "match": {},
            "matchedColumns": [
              139
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 210,
            "name": "Selects Residential Radio Button",
            "match": {
              "location": "NYL_StepDef.selects_Residential_Radio_Button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 211,
            "name": "Selects Yes Radio Button for Business Address",
            "match": {
              "location": "NYL_StepDef.selects_Yes_Radio_Button_for_Business_Address()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 212,
            "name": "Enters Business Address Details as \"Arthur Corp\",\"Sole Proprietary\"",
            "match": {
              "arguments": [
                {
                  "val": "Arthur Corp",
                  "offset": 36
                },
                {
                  "val": "Sole Proprietary",
                  "offset": 50
                }
              ],
              "location": "NYL_StepDef.enters_Business_Address_Details_as(String,String)"
            },
            "matchedColumns": [
              86,
              87
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 213,
            "name": "Enters Physician details  for Self as \"Alan\",\"Harper\",\"2302 S Rouse Ave\",\"Kansas\",\"Pittsburg\",\"66762\",\"9878547854\"",
            "match": {},
            "matchedColumns": [
              147,
              148,
              149,
              150,
              151,
              152,
              153
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 214,
            "name": "Enters contact Details for Spouse as \"985802145\",\"Female\",\"Home\",\"9870326599\"",
            "match": {},
            "matchedColumns": [
              88,
              89,
              90,
              91
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 215,
            "name": "Enters Physician details  for Spouse as \"Judith\",\"Harper\",\"2302 S Rouse Ave\",\"Kansas\",\"Pittsburg\",\"66762\",\"7878410257\"",
            "match": {},
            "matchedColumns": [
              160,
              154,
              155,
              156,
              157,
              158,
              159
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 216,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 218,
            "name": "Application Summary Page is displayed to user",
            "match": {
              "location": "NYL_StepDef.application_Summary_Page_is_displayed_to_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 219,
            "name": "Validates Benefit Amount for Self as \"$1,750,000\" under TwentyYTL",
            "match": {},
            "matchedColumns": [
              20
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 220,
            "name": "Validates Waiver of Premium Rider",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 221,
            "name": "Validates Rider ADnD and Rider Benefit Amount for Self as \"$250,000\"",
            "match": {},
            "matchedColumns": [
              21
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 222,
            "name": "Validates Benefit Amount for Self as \"$500,000\" under FifteenYTL",
            "match": {},
            "matchedColumns": [
              23
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 223,
            "name": "Validates Rider ADnD and Rider Benefit Amount for Self as \"$150,000\"",
            "match": {},
            "matchedColumns": [
              24
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 224,
            "name": "Validates Waiver of Premium Rider",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 225,
            "name": "Validates Benefit Amount for Self as \"$500,000\" under TenYTL",
            "match": {},
            "matchedColumns": [
              25
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 226,
            "name": "Validates Rider ADnD and Rider Benefit Amount for Self as \"$150,000\"",
            "match": {},
            "matchedColumns": [
              26
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 227,
            "name": "Validates Waiver of Premium Rider",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 228,
            "name": "Validates Benefit Amount for Self as \"$500,000\" under PureTerm",
            "match": {},
            "matchedColumns": [
              27
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 229,
            "name": "Validates Quick Decision under PureTerm",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 230,
            "name": "Validates Waiver of Premium Rider",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 231,
            "name": "Validates Benefit Amount for Self as \"$750,000\" under PrefTerm",
            "match": {},
            "matchedColumns": [
              28
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 232,
            "name": "Validates Rider ADnD and Rider Benefit Amount for Self as \"$200,000\"",
            "match": {},
            "matchedColumns": [
              29
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 233,
            "name": "Validates Waiver of Premium Rider",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 234,
            "name": "Validates Benefit Amount for Self as \"$750,000\" under PAI",
            "match": {},
            "matchedColumns": [
              30
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 235,
            "name": "Validates Benefit Amount for Self as \"$1,500\" under DPOSDI",
            "match": {},
            "matchedColumns": [
              33
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 236,
            "name": "Validates Cost of Living Adjustment Rider",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 237,
            "name": "Validates Benefit Amount for Self as \"$5,000\" under OOEI",
            "match": {},
            "matchedColumns": [
              36
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 238,
            "name": "Validates Benefit Amount for Self as \"$500\" under HII",
            "match": {},
            "matchedColumns": [
              39
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 239,
            "name": "Validates Benefit Amount for Spouse as \"$300,000\" under PAI",
            "match": {
              "arguments": [
                {
                  "val": "$300,000",
                  "offset": 40
                }
              ],
              "location": "NYL_StepDef.validates_Benefit_Amount_for_Spouse_as_under_PAI(String)"
            },
            "matchedColumns": [
              31
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 240,
            "name": "Validates Benefit Amount for Spouse as \"$500\" under HII",
            "match": {
              "arguments": [
                {
                  "val": "$500",
                  "offset": 40
                }
              ],
              "location": "NYL_StepDef.validates_Benefit_Amount_for_Spouse_as_under_HII(String)"
            },
            "matchedColumns": [
              40
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 241,
            "name": "Validates Benefit Amount for Child as \"$25,000\" under TwentyYTL",
            "match": {
              "arguments": [
                {
                  "val": "$25,000",
                  "offset": 39
                }
              ],
              "location": "NYL_StepDef.validates_Benefit_Amount_for_Child_as_under_TwentyYTL(String)"
            },
            "matchedColumns": [
              22
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 242,
            "name": "Validates Benefit Amount for Child as \"$75,000\" under PAI",
            "match": {
              "arguments": [
                {
                  "val": "$75,000",
                  "offset": 39
                }
              ],
              "location": "NYL_StepDef.validates_Benefit_Amount_for_Child_as_under_PAI(String)"
            },
            "matchedColumns": [
              32
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 243,
            "name": "Validates Benefit Amount for Child as \"$500\" under HII",
            "match": {
              "arguments": [
                {
                  "val": "$500",
                  "offset": 39
                }
              ],
              "location": "NYL_StepDef.validates_Benefit_Amount_for_Child_as_under_HII(String)"
            },
            "matchedColumns": [
              41
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 244,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 245,
            "name": "Save Information page will be displayed to user and user will enter Login details as  \"Adam@123\",\"Adam@123\"",
            "match": {},
            "matchedColumns": [
              92,
              93
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 246,
            "name": "Clicks on next and OK Button",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 248,
            "name": "Authorize page details are displayed to user and confirm the term and conditions for Self",
            "match": {
              "location": "NYL_StepDef.authorize_page_details_are_displayed_to_user_and_confirm_the_term_and_conditions_for_Self()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 249,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 251,
            "name": "Statement of Health page one is displayed to user and answers as No for all questions for Self",
            "match": {},
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 252,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 253,
            "name": "Statement of Health page two is displayed to user and answers as No for all questions for Self",
            "match": {},
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 254,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 255,
            "name": "Almost done page is displayed to user",
            "match": {
              "location": "NYL_StepDef.almost_done_page_is_displayed_to_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 256,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 257,
            "name": "Review and sign page details are displayed to user and Click on continue and attached the sign",
            "match": {
              "location": "NYL_StepDef.review_and_sign_page_details_are_displayed_to_user_and_Click_on_continue_and_attached_the_sign()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 258,
            "name": "Clicks on next button to finish",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button_to_finish()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 259,
            "name": "Review and sign page details are displayed to user and Click on continue and attached the sign",
            "match": {
              "location": "NYL_StepDef.review_and_sign_page_details_are_displayed_to_user_and_Click_on_continue_and_attached_the_sign()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 260,
            "name": "Clicks on next button to finish",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button_to_finish()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 261,
            "name": "Your Insurance Request Decision Page is displayed to user",
            "match": {
              "location": "NYL_StepDef.your_Insurance_Request_Decision_Page_is_displayed_to_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 262,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 264,
            "name": "Payment Information Page is displayed to user",
            "match": {
              "location": "NYL_StepDef.payment_Information_Page_is_displayed_to_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 265,
            "name": "user Selects Payment option as Bank for TwentyYTL",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 266,
            "name": "User enters Details for Bank Account as \"Bank of America\",\"Jack\",\"748596789\",\"789456789452\"",
            "match": {
              "arguments": [
                {
                  "val": "Bank of America",
                  "offset": 41
                },
                {
                  "val": "Jack",
                  "offset": 59
                },
                {
                  "val": "748596789",
                  "offset": 66
                },
                {
                  "val": "789456789452",
                  "offset": 78
                }
              ],
              "location": "NYL_StepDef.user_enters_Details_for_Bank_Account_as(String,String,String,String)"
            },
            "matchedColumns": [
              140,
              141,
              142,
              143
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 267,
            "name": "Clicks on Save button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Save_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 268,
            "name": "Selects Frequency for TwentyYTL as \"Monthly\"",
            "match": {},
            "matchedColumns": [
              144
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 269,
            "name": "Selects Payment Method for FifteenYTL",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 270,
            "name": "Selects Radio Button for existing payment method",
            "match": {
              "location": "NYL_StepDef.selects_Radio_Button_for_existing_payment_method()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 271,
            "name": "Clicks on Save button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Save_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 272,
            "name": "Selects Frequency for FifteenYTL as \"Monthly\"",
            "match": {},
            "matchedColumns": [
              144
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 273,
            "name": "Selects Payment Method for TenYTL",
            "match": {
              "location": "NYL_StepDef.selects_Payment_Method_for_TenYTL()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 274,
            "name": "Selects Radio Button for existing payment method",
            "match": {
              "location": "NYL_StepDef.selects_Radio_Button_for_existing_payment_method()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 275,
            "name": "Clicks on Save button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Save_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 276,
            "name": "Selects Frequency for TenYTL as \"Monthly\"",
            "match": {},
            "matchedColumns": [
              144
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 277,
            "name": "Selects Payment Method for PureTerm",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 278,
            "name": "Selects Radio Button for existing payment method",
            "match": {
              "location": "NYL_StepDef.selects_Radio_Button_for_existing_payment_method()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 279,
            "name": "Clicks on Save button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Save_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 280,
            "name": "Selects Frequency for PureTerm as \"Monthly\"",
            "match": {},
            "matchedColumns": [
              144
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 281,
            "name": "Selects Payment Method for PrefTerm",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 282,
            "name": "Selects Radio Button for existing payment method",
            "match": {
              "location": "NYL_StepDef.selects_Radio_Button_for_existing_payment_method()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 283,
            "name": "Clicks on Save button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Save_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 284,
            "name": "Selects Frequency for PrefTerm as \"Monthly\"",
            "match": {},
            "matchedColumns": [
              144
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 285,
            "name": "Selects Payment Method for PAI",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 286,
            "name": "Selects Radio Button for existing payment method",
            "match": {
              "location": "NYL_StepDef.selects_Radio_Button_for_existing_payment_method()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 287,
            "name": "Clicks on Save button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Save_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 288,
            "name": "Selects Frequency for PAI as \"Monthly\"",
            "match": {},
            "matchedColumns": [
              144
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 289,
            "name": "Selects Payment Method for DPOSDI",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 290,
            "name": "Selects Radio Button for existing payment method",
            "match": {
              "location": "NYL_StepDef.selects_Radio_Button_for_existing_payment_method()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 291,
            "name": "Clicks on Save button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Save_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 292,
            "name": "Selects Frequency for DPOSDI as \"Monthly\"",
            "match": {},
            "matchedColumns": [
              144
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 293,
            "name": "Selects Payment Method for OOEI",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 294,
            "name": "Selects Radio Button for existing payment method",
            "match": {
              "location": "NYL_StepDef.selects_Radio_Button_for_existing_payment_method()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 295,
            "name": "Clicks on Save button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Save_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 296,
            "name": "Selects Frequency for OOEI as \"Monthly\"",
            "match": {},
            "matchedColumns": [
              144
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 297,
            "name": "Selects Payment Method for HII",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 298,
            "name": "Selects Radio Button for existing payment method",
            "match": {
              "location": "NYL_StepDef.selects_Radio_Button_for_existing_payment_method()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 299,
            "name": "Clicks on Save button",
            "match": {
              "location": "NYL_StepDef.clicks_on_Save_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 300,
            "name": "Selects Frequency for HII as \"Monthly\" and reviews",
            "match": {},
            "matchedColumns": [
              144
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 301,
            "name": "Clicks on next button",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 303,
            "name": "Payment Authorization Letter is displayed to user and clicks on Continue",
            "match": {
              "location": "NYL_StepDef.payment_Authorization_Letter_is_displayed_to_user_and_clicks_on_Continue()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 304,
            "name": "Signs Payment Authorization Letter",
            "match": {
              "location": "NYL_StepDef.signs_Payment_Authorization_Letter()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 305,
            "name": "Clicks on next button to finish",
            "match": {
              "location": "NYL_StepDef.clicks_on_next_button_to_finish()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 307,
            "name": "Thank you page is displayed to user",
            "match": {
              "location": "NYL_StepDef.thank_you_page_is_displayed_to_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "undefined"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 308,
            "name": "Verify that two Confirmation numbers are generated for \"ama\"",
            "match": {},
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 3,
            "name": "@AmaRegression_1"
          }
        ]
      }
    ],
    "name": "AMA Test",
    "description": "",
    "id": "ama-test",
    "keyword": "Feature",
    "uri": "src/main/resources/Feature/ama_NYL.feature"
  }
]